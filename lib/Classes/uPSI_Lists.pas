unit uPSI_Lists;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis.
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface



uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;

type
(*----------------------------------------------------------------------------*)
  TPSImport_Lists = class(TPSPlugin)
  public
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;


{ compile-time registration functions }
procedure SIRegister_TObjectList(CL: TPSPascalCompiler);
procedure SIRegister_Lists(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_TObjectList(CL: TPSRuntimeClassImporter);
procedure RIRegister_Lists(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   Lists
  ;


procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_Lists]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_TObjectList(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TObject', 'TObjectList') do
  with CL.AddClassN(CL.FindClass('TObject'),'TObjectList') do
  begin
    RegisterMethod('Constructor Create');
    RegisterMethod('Function Add( Item : TObject) : Integer');
    RegisterMethod('Procedure Clear');
    RegisterMethod('Procedure Delete( Index : Integer)');
    RegisterMethod('Function Expand : TObjectList');
    RegisterMethod('Function First : TObject');
    RegisterMethod('Function IndexOf( Item : TObject) : Integer');
    RegisterMethod('Procedure Insert( Index : Integer; Item : TObject)');
    RegisterMethod('Function Last : TObject');
    RegisterMethod('Procedure Move( CurIndex, NewIndex : Integer)');
    RegisterMethod('Function Remove( Item : TObject) : Integer');
    RegisterMethod('Procedure Pack');
    RegisterProperty('Count', 'Integer', iptr);
    RegisterProperty('Items', 'TObject Integer', iptrw);
    SetDefaultPropery('Items');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_Lists(CL: TPSPascalCompiler);
begin
  SIRegister_TObjectList(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure TObjectListItems_W(Self: TObjectList; const T: TObject; const t1: Integer);
begin Self.Items[t1] := T; end;

(*----------------------------------------------------------------------------*)
procedure TObjectListItems_R(Self: TObjectList; var T: TObject; const t1: Integer);
begin T := Self.Items[t1]; end;

(*----------------------------------------------------------------------------*)
procedure TObjectListCount_R(Self: TObjectList; var T: Integer);
begin T := Self.Count; end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TObjectList(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TObjectList) do
  begin
    RegisterConstructor(@TObjectList.Create, 'Create');
    RegisterMethod(@TObjectList.Add, 'Add');
    RegisterVirtualMethod(@TObjectList.Clear, 'Clear');
    RegisterMethod(@TObjectList.Delete, 'Delete');
    RegisterMethod(@TObjectList.Expand, 'Expand');
    RegisterMethod(@TObjectList.First, 'First');
    RegisterMethod(@TObjectList.IndexOf, 'IndexOf');
    RegisterMethod(@TObjectList.Insert, 'Insert');
    RegisterMethod(@TObjectList.Last, 'Last');
    RegisterMethod(@TObjectList.Move, 'Move');
    RegisterMethod(@TObjectList.Remove, 'Remove');
    RegisterMethod(@TObjectList.Pack, 'Pack');
    RegisterPropertyHelper(@TObjectListCount_R,nil,'Count');
    RegisterPropertyHelper(@TObjectListItems_R,@TObjectListItems_W,'Items');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_Lists(CL: TPSRuntimeClassImporter);
begin
  RIRegister_TObjectList(CL);
end;



{ TPSImport_Lists }
(*----------------------------------------------------------------------------*)
procedure TPSImport_Lists.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_Lists(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_Lists.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_Lists(ri);
end;
(*----------------------------------------------------------------------------*)


end.
